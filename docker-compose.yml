version: '3.7'

services:
  reverse-proxy: 
    restart: always
    build:
      dockerfile: Dockerfile
      context: ./services/nginx
    ports:
      - '80:80'
  db:
    image: postgres:latest
    volumes:
      - ~/.docker/volumes/postgres:/var/lib/postgresql/data
      - ./services/auth-user-service/user_service.sql:/docker-entrypoint-initdb.d/user_service.sql
      - ./services/post-service/post_service.sql:/docker-entrypoint-initdb.d/post_service.sql
    ports:
      - 5432:5432
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - 2181:2181
  kafka:
    image: wurstmeister/kafka
    ports:
      - 9092:9092
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=kafka-host-1
      - KAFKA_BROKER_ID=1
      - KAFKA_CREATE_TOPICS=author:6:1, author_reply:6:1, user_auth:6:1, user_auth_reply:6:1
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  api-gateway:
    build:
      dockerfile: Dockerfile.debug
      context: ./services/api-gateway
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /api-gateway/node_modules
      - ./api-gateway:/api-gateway
    environment:
      - PORT=3001
    ports: 
      # Uncomment if you want to connect to service directly
      # - '3000:3001'
      - '9000:9229'  
  auth-service:
      build:
        dockerfile: Dockerfile.debug
        context: ./services/auth-user-service
        labels:
          - "serviceRoute=auth"
          - "serviceName=auth-service"
      volumes:
        - /auth-user-service/node_modules
        - ./auth-user-service:/auth-user-service 
      ports:
         # Uncomment if you want to connect to service directly
        # -  '3001:3000'
        -  '9001:9229'
      environment:
        - PORT=3000
  post-service:
    build:
      dockerfile: Dockerfile.debug
      context: ./services/post-service
      labels:
          - "serviceRoute=posts"
          - "serviceName=post-service"
    volumes:
      - /post-service/node_modules
      - ./post-service:/post-service
    environment:
        - PORT=3000
    ports: 
      # Uncomment if you want to connect to service directly
      # - '3003:3000'
      - '9002:9229'
  upload-service:
      build:
        dockerfile: Dockerfile.debug
        context: ./services/image-and-video-API
        labels:
          - "serviceRoute=upload"
          - "serviceName=upload-service"
      volumes:
        - /image-video-api/node_modules
        - ./image-and-video-API:/image-video-api
      environment:
        - PORT=3000
      ports: 
        # Uncomment if you want to connect to service directly
        # - '3004:3000'
        - '9003:9229'